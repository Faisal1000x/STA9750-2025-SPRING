---
title: "Mini-Project #01"
author: "Faisal Sayyed"
format: html
editor: visual
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
```

## Introduction

The NYC Payroll Analysis project aims to analyze payroll data from New York City’s public sector employees. The dataset, obtained from an open government source, contains detailed information about employee salaries, overtime pay, and other compensation elements. This project uses **Quarto**, an open-source scientific and technical publishing system, to create a well-structured, reproducible analysis report.

The primary objectives of this analysis are:

1.  **Data Collection and Cleaning** – Ensuring that data is structured correctly and free of inconsistencies.

2.  **Data Merging and Transformation** – Combining multiple datasets, if needed, and restructuring them for efficient analysis.

3.  **Descriptive Analysis** – Summarizing the dataset to extract key insights such as salary distribution and agency-wise breakdowns.

4.  **Data Visualization** – Creating insightful visual representations of payroll trends using `ggplot2`.

5.  **Report Formatting and Communication** – Structuring the findings in a professional document for decision-makers and stakeholders.

## **1. Data Ingestion and Cleaning**

### **1.1 Downloading the Dataset**

```{r}
# Load necessary packages
library(tidyverse)
library(readr)

# Define the URL of the dataset
nyc_payroll_url <- "https://data.cityofnewyork.us/api/views/k397-673e/rows.csv?accessType=DOWNLOAD"

# Define the local file name
local_file <- "NYC_Payroll_Data.csv"

# Check if file exists, if not, download it
if (!file.exists(local_file)) {
  download.file(nyc_payroll_url, destfile = local_file, method = "curl")
}

# Read the dataset
payroll_data <- read_csv(local_file)
```

### **1.2 Initial Data Exploration**

```{r}
# View dataset as a table
library(knitr)
kable(head(payroll_data))

# Check column names
kable(as.data.frame(colnames(payroll_data)))

# Check missing values
kable(as.data.frame(colSums(is.na(payroll_data))))
```

### **1.3 Data Cleaning**

```{r}
library(dplyr)

payroll_data <- payroll_data %>% 
  select(`Agency Name`, `Title Description`, `Base Salary`, `Total OT Paid`, `Regular Gross Paid`, `Fiscal Year`)

payroll_data <- payroll_data %>%
  rename(
    agency = `Agency Name`, 
    job_title = `Title Description`, 
    base_salary = `Base Salary`, 
    overtime_pay = `Total OT Paid`, 
    total_pay = `Regular Gross Paid`, 
    pay_year = `Fiscal Year`
  )

payroll_data <- payroll_data %>%
  filter(!is.na(total_pay) & total_pay > 0)

kable(head(payroll_data))
```

## **2. Data Combination and Alignment**

```{r}
library(janitor)

previous_year_payroll <- read_csv("Citywide_Payroll_Data__Fiscal_Year_.csv")
payroll_data <- payroll_data %>% rename_with(~tolower(gsub("\\s+", "_", .)))
previous_year_payroll <- previous_year_payroll %>% rename_with(~tolower(gsub("\\s+", "_", .)))

previous_year_payroll <- previous_year_payroll %>%
  rename(
    agency = agency_name, 
    job_title = title_description
  )

common_cols <- intersect(names(payroll_data), names(previous_year_payroll))
kable(as.data.frame(common_cols))

payroll_data <- payroll_data %>% distinct()
previous_year_payroll <- previous_year_payroll %>% distinct()

previous_year_payroll <- previous_year_payroll %>%
  group_by(agency, job_title, base_salary) %>%
  summarise(across(everything(), first), .groups = "drop") 

merged_payroll <- left_join(payroll_data, previous_year_payroll, 
                            by = c("agency", "job_title", "base_salary"))

kable(head(merged_payroll))
```

## **3. Descriptive Statistical Analysis**

```{r}
# Group-wise analysis
payroll_summary <- payroll_data %>%
  group_by(agency) %>%
  summarize(
    avg_salary = mean(base_salary, na.rm = TRUE),
    median_salary = median(base_salary, na.rm = TRUE),
    max_salary = max(base_salary, na.rm = TRUE),
    min_salary = min(base_salary, na.rm = TRUE)
  )

kable(payroll_summary)
```

## **4. Data Visualization**

```{r}
library(ggplot2)

# Histogram of salaries
ggplot(payroll_data, aes(x = total_pay)) +
  geom_histogram(bins = 50, fill = "blue", color = "black") +
  labs(title = "Distribution of Total Pay in NYC Payroll", x = "Total Pay", y = "Frequency")
```

```{r}
# Boxplot of salaries by agency
top_10_agencies <- payroll_summary %>%
  arrange(desc(avg_salary)) %>%
  slice_head(n = 10)

# Plot
ggplot(top_10_agencies, aes(x = reorder(agency, avg_salary), y = avg_salary)) +
  geom_boxplot(fill = "lightblue") +
  coord_flip() +
  labs(title = "Top 10 Agencies by Average Salary", x = "Agency", y = "Average Salary") +
  theme_minimal()
```

## Conclusion & Recommendations

1.  **Salary Variability:** There is a wide range of salaries across agencies.
2.  **Outliers:** Certain job titles have significantly higher salaries, suggesting further review.
3.  **Budget Allocation:** Agencies with higher salary averages should be analyzed for efficiency.

The analysis of citywide payroll data highlights significant variations in average salaries across different agencies. By focusing on the top 10 agencies with the highest average salaries, we can identify departments that offer the most competitive compensation. Further analysis is needed to explore factors influencing salary distribution, such as experience, job responsibilities, and funding sources, to ensure fair compensation and efficient resource management.
